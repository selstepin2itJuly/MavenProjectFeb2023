<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="5" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="78822" started-at="2023-02-05T16:12:14 EST" finished-at="2023-02-05T16:13:33 EST">
    <groups>
    </groups>
    <test name="Test 1" duration-ms="78822" started-at="2023-02-05T16:12:14 EST" finished-at="2023-02-05T16:13:33 EST">
      <class name="testcases.DashboardTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases.DashboardTest@70a9f84e]" name="beforeClass" is-config="true" duration-ms="5870" started-at="2023-02-05T16:13:16 EST" finished-at="2023-02-05T16:13:22 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getDashboardQuickLaunchItemsCount_006()[pri:0, instance:testcases.DashboardTest@70a9f84e]" name="getDashboardQuickLaunchItemsCount_006" duration-ms="397" started-at="2023-02-05T16:13:22 EST" finished-at="2023-02-05T16:13:22 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDashboardQuickLaunchItemsCount_006 -->
        <test-method status="FAIL" signature="getDashboardQuickLaunchItems_004()[pri:0, instance:testcases.DashboardTest@70a9f84e]" name="getDashboardQuickLaunchItems_004" duration-ms="310" started-at="2023-02-05T16:13:22 EST" finished-at="2023-02-05T16:13:23 EST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [recruitment] but found [Recruitment],
expected [maintenance] but found [Maintenance]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [recruitment] but found [Recruitment],
expected [maintenance] but found [Maintenance]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testcases.DashboardTest.getDashboardQuickLaunchItems_004(DashboardTest.java:56)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDashboardQuickLaunchItems_004 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcases.DashboardTest@70a9f84e]" name="afterClass" is-config="true" duration-ms="666" started-at="2023-02-05T16:13:23 EST" finished-at="2023-02-05T16:13:23 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testcases.DashboardTest -->
      <class name="testcases.TimeTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases.TimeTest@130f889]" name="beforeClass" is-config="true" duration-ms="6083" started-at="2023-02-05T16:13:23 EST" finished-at="2023-02-05T16:13:29 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getNamesTable_005()[pri:0, instance:testcases.TimeTest@130f889]" name="getNamesTable_005" duration-ms="2716" started-at="2023-02-05T16:13:29 EST" finished-at="2023-02-05T16:13:32 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNamesTable_005 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcases.TimeTest@130f889]" name="afterClass" is-config="true" duration-ms="666" started-at="2023-02-05T16:13:32 EST" finished-at="2023-02-05T16:13:33 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testcases.TimeTest -->
      <class name="testcases.LoginTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testcases.LoginTest@dbd940d]" name="beforeSuite" is-config="true" duration-ms="394" started-at="2023-02-05T16:12:14 EST" finished-at="2023-02-05T16:12:14 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.LoginTest@dbd940d]" name="beforeMethod" is-config="true" duration-ms="6823" started-at="2023-02-05T16:12:14 EST" finished-at="2023-02-05T16:12:21 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="loginSuccessful_001()[pri:0, instance:testcases.LoginTest@dbd940d]" name="loginSuccessful_001" duration-ms="17039" started-at="2023-02-05T16:12:21 EST" finished-at="2023-02-05T16:12:38 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSuccessful_001 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.LoginTest@dbd940d]" name="afterMethod" is-config="true" duration-ms="1517" started-at="2023-02-05T16:12:38 EST" finished-at="2023-02-05T16:12:39 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.LoginTest@dbd940d]" name="beforeMethod" is-config="true" duration-ms="4027" started-at="2023-02-05T16:12:39 EST" finished-at="2023-02-05T16:12:43 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="loginUnSuccessful_002()[pri:0, instance:testcases.LoginTest@dbd940d]" name="loginUnSuccessful_002" duration-ms="31880" started-at="2023-02-05T16:12:43 EST" finished-at="2023-02-05T16:13:15 EST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testcases.LoginTest.loginUnSuccessful_002(LoginTest.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUnSuccessful_002 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.LoginTest@dbd940d]" name="afterMethod" is-config="true" duration-ms="760" started-at="2023-02-05T16:13:15 EST" finished-at="2023-02-05T16:13:16 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testcases.LoginTest@dbd940d]" name="afterSuite" is-config="true" duration-ms="451" started-at="2023-02-05T16:13:33 EST" finished-at="2023-02-05T16:13:33 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcases.LoginTest -->
    </test> <!-- Test 1 -->
  </suite> <!-- Suite -->
</testng-results>
